{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaswalser/Alura/React/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Form from \"./components/Form/Form\";\nimport MyOrg from \"./components/MyOrg/MyOrg\";\nimport Team from \"./components/Team/Team\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showForm, actualizeShow] = useState(true);\n  const changeShow = () => {\n    actualizeShow(!showForm);\n  };\n  const teams = [\"Programming\", \"Front End\", \"Data Science\", \"Devops\", \"UX & Design\", \"Mobile\", \"Innovation & Gestation\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), showForm === true ? /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(MyOrg, {\n      changeShow: changeShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Team, {\n      team: \"Programming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Team, {\n      team: \"Front End\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Team, {\n      team: \"Data Science\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Team, {\n      team: \"Devops\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Team, {\n      team: \"UX & Design\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qh6ednEHlRxsEw3uJGiG6K9vDgg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","Form","MyOrg","Team","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showForm","actualizeShow","changeShow","teams","children","fileName","_jsxFileName","lineNumber","columnNumber","team","_c","$RefreshReg$"],"sources":["/Users/nicolaswalser/Alura/React/my-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Form from \"./components/Form/Form\";\nimport MyOrg from \"./components/MyOrg/MyOrg\";\nimport Team from \"./components/Team/Team\";\n\nfunction App() {\n  const [showForm, actualizeShow] = useState(true);\n  const changeShow = () => {\n    actualizeShow(!showForm);\n  };\n  const teams = [\n    \"Programming\",\n    \"Front End\",\n    \"Data Science\",\n    \"Devops\",\n    \"UX & Design\",\n    \"Mobile\",\n    \"Innovation & Gestation\",\n  ];\n  return (\n    <div>\n      <Header />\n      {showForm === true ? <Form /> : <></>}\n      <MyOrg changeShow={changeShow} />\n      <Team team=\"Programming\" />\n      <Team team=\"Front End\" />\n      <Team team=\"Data Science\" />\n      <Team team=\"Devops\" />\n      <Team team=\"UX & Design\" />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACvBD,aAAa,CAAC,CAACD,QAAQ,CAAC;EAC1B,CAAC;EACD,MAAMG,KAAK,GAAG,CACZ,aAAa,EACb,WAAW,EACX,cAAc,EACd,QAAQ,EACR,aAAa,EACb,QAAQ,EACR,wBAAwB,CACzB;EACD,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA,CAACL,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACTR,QAAQ,KAAK,IAAI,gBAAGL,OAAA,CAACJ,IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGb,OAAA,CAAAE,SAAA,mBAAI,CAAC,eACrCF,OAAA,CAACH,KAAK;MAACU,UAAU,EAAEA;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCb,OAAA,CAACF,IAAI;MAACgB,IAAI,EAAC;IAAa;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3Bb,OAAA,CAACF,IAAI;MAACgB,IAAI,EAAC;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzBb,OAAA,CAACF,IAAI;MAACgB,IAAI,EAAC;IAAc;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5Bb,OAAA,CAACF,IAAI;MAACgB,IAAI,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtBb,OAAA,CAACF,IAAI;MAACgB,IAAI,EAAC;IAAa;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV;AAACT,EAAA,CA1BQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}